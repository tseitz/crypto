//@version=4
strategy("SlimTrades 15m", overlay=true, calc_on_every_tick=false, initial_capital=200, 
          default_qty_value=200, default_qty_type=strategy.cash, currency=currency.USD)


// VARIABLES
var isLong = false
var isShort = false
var shortZone = false
var longZone = false
var firstAction = false
var lowSlowCount = 0
var highSlowCount = 0
var lowFastCount = 0
var highFastCount = 0
var addHighCount = 0
var addLowCount = 0
var longCount = 0
var shortCount = 0
var entryPrice = 0.0
var lastMacd = 0.0
var lastRsi = 0.0


// INPUTS
daysBackMax = input(defval=120, title="Max Days Back to Test", minval=0)
daysBackMin = 0
msBackMax = 1000 * 60 * 60 * 24 * daysBackMax
msBackMin = 1000 * 60 * 60 * 24 * daysBackMin
isWithinTimeBounds = (msBackMax == 0 or (time > (timenow - msBackMax))) and (msBackMin == 0 or (time < (timenow - msBackMin)))

// hiLowFast = input(defval=30, title="Hi Low Short", minval=0, step=5)
hiLowSlow = input(defval=45, title="Hi Low Slow", minval=0, step=1)
hiLowSuperSlow = input(defval=68, title="Hi Low Super Slow", minval=0, step=1)

buyLongZoneRsi = input(defval=52, title="Buy Long Zone RSI", minval=0, step=1)
// dramaticBuyLongZoneRSI = input(defval=31, title="Dramatic Buy Long Zone RSI", minval=0, step=1)
rsiCloseLongZone = input(defval=64, title="Close Long Zone RSI", minval=0, step=1)

shortShortZoneRsi = input(defval=48, title="Short Short Zone RSI", minval=0, step=1)
// dramaticShortShortZoneRSI = input(defval=69, title="Dramatic Short Short Long Zone RSI", minval=0, step=1)
rsiCloseShortZone = input(defval=33, title="Close Short Zone RSI", minval=0, step=1)

// macdLength = input(defval=15, title="MACD Bars", minval=0, step=5)

closeShortPerc = input(title="Close Short Min (%)", type=input.float, minval=0.0, step=0.1, defval=0.4) * 0.01
closeLongPerc = input(title="Close Long Min (%)", type=input.float, minval=0.0, step=0.1, defval=2.3) * 0.01

longTrailPerc = input(title="Long Trail Stop (%)", type=input.float, minval=0.0, step=0.1, defval=7.8) * 0.01
shortTrailPerc = input(title="Short Trail Stop (%)", type=input.float, minval=0.0, step=0.1, defval=2.8) * 0.01

allowShorts = input(defval=true, title="Allow Shorts", type=input.bool)
fastOpenLong = input(defval=true, title="Fast Open Long", type=input.bool)
fastOpenShort = input(defval=true, title="Fast Open Short", type=input.bool)
fastOpenLongRsi = input(defval=70, title="Fast Open Short RSI", minval=0, step=1)
fastOpenShortRsi = input(defval=28, title="Fast Open Short RSI", minval=0, step=1)

addOnLows = input(defval=true, title="Add On Lows", type=input.bool)
addLowRsi = input(defval=43, title="Add Low RSI", minval=0, step=1)

addOnHighs = input(defval=false, title="Add On Highs", type=input.bool)
addHighRsi = input(defval=60, title="Add High RSI", minval=0, step=1)

showSlow = input(defval=true, title="Show Slow", type=input.bool)

longShortCloses = input(defval=true, title="Long Short Closes", type=input.bool)
longShortStops = input(defval=true, title="Long Short Stops", type=input.bool)
buyShortZoneRsi = input(defval=39, title="Buy Short Zone RSI", minval=0, step=1)


// TRAIL STOP
longStopPrice = 0.0

longStopPrice := if (strategy.position_size > 0)
    stopValue = close * (1 - longTrailPerc)
    max(stopValue, longStopPrice[1]) // max allows for trailing stop
else
    0

shortStopPrice = 0.0

shortStopPrice := if (strategy.position_size < 0)
    stopValue = low * (1 + shortTrailPerc)
    min(stopValue, shortStopPrice[1])
else
    999999


closeShortAfter = strategy.position_avg_price * (1 - (1 * closeShortPerc))
closeLongAfter = strategy.position_avg_price * (1 + (1 * closeLongPerc))

// tradeMA = ema(close, 2)
// plot(series=tradeMA, color=color.blue, linewidth=1)

// MACD and RSI
fast = 12, slow = 26
fastMA = ema(close, fast)
slowMA = ema(close, slow)
macd = fastMA - slowMA
signal = ema(macd, 9)
rsiClose = rsi(close, 14)

getMACD(index) =>
    thisFastMA = ema(close[index], fast)
    thisSlowMA = ema(close[index], slow)
    thisMacd = thisFastMA - thisSlowMA

getRsi(index) =>
    thisRsi = rsi(close[index], 14)

getHighest(index, speed) =>
    thisHighest = highest(high, speed)[index]

getLowest(index, speed) =>
    thisLowest = lowest(low, speed)[index]

getVolume(index) =>
    thisVolume = volume[index]

macd0 = getMACD(0)
macd1 = getMACD(1)
macd2 = getMACD(2)
macd3 = getMACD(3)

rsi0 = getRsi(0)
rsi1 = getRsi(1)
rsi2 = getRsi(2)
rsi3 = getRsi(3)
rsi4 = getRsi(4)

volume0 = getVolume(0)
volume1 = getVolume(1)
volume2 = getVolume(2)
volume3 = getVolume(3)

// highestMacd = highest(macd, macdLength)[1]
// highestMacd2 = highest(macd, macdLength)[2]
// highestMacd3 = highest(macd, macdLength)[3]
// highestMacd4 = highest(macd, macdLength)[4]
// lowestMacd = lowest(macd, macdLength)[1]
// lowestMacd2 = lowest(macd, macdLength)[2]
// lowestMacd3 = lowest(macd, macdLength)[3]
// lowestMacd4 = lowest(macd, macdLength)[4]
// higherMacd = macd > highestMacd and macd > 0
// higherMacd2 = macd1 > highestMacd2 and macd1 > 0
// higherMacd3 = macd2 > highestMacd3 and macd2 > 0
// higherMacd4 = macd3 > highestMacd4 and macd3 > 0
// lowerMacd = (allowFastMacdLongs and longZone and macd < lowestMacd) or (macd < lowestMacd and macd < 0)
// lowerMacd2 = (allowFastMacdLongs and longZone and macd1 < lowestMacd2) or (macd1 < lowestMacd2 and macd1 < 0)
// lowerMacd3 = macd2 < lowestMacd3 and macd2 < 0
// lowerMacd4 = macd3 < lowestMacd4 and macd3 < 0
// bgcolor(color=higherMacd ? color.green : lowerMacd ? color.red : na, transp=90)


// PLOT SUPPORT/RESISTANCE
// highestFast0 = getHighest(0, hiLowFast)
// highestFast1 = getHighest(1, hiLowFast)
// highestFast2 = getHighest(2, hiLowFast)
// highestFast3 = getHighest(3, hiLowFast)
// lowestFast0 = getLowest(0, hiLowFast)
// lowestFast1 = getLowest(1, hiLowFast)
// lowestFast2 = getLowest(2, hiLowFast)
// lowestFast3 = getLowest(3, hiLowFast)
highestSlow1 = getHighest(1, hiLowSlow)
highestSlow2 = getHighest(2, hiLowSlow)
highestSlow3 = getHighest(3, hiLowSlow)
lowestSlow1 = getLowest(1, hiLowSlow)
lowestSlow2 = getLowest(2, hiLowSlow)
lowestSlow3 = getLowest(3, hiLowSlow)
highestSuperSlow1 = getHighest(1, hiLowSuperSlow)
lowestSuperSlow1 = getLowest(1, hiLowSuperSlow)

plot(series=highestSlow1, color=color.green, linewidth=2)
plot(series=lowestSlow1, color=color.red, linewidth=2)
plot(series=showSlow ? highestSuperSlow1 : na, color=color.green, linewidth=1)
plot(series=showSlow ? lowestSuperSlow1 : na, color=color.red, linewidth=1)

// lowestSlow2 because I want to make sure it's not coming up to meet it. it needs to be a true low
oneSlowLow = close < lowestSlow1 and close < lowestSlow2
oneSlowHigh = close > highestSlow1 and close > highestSlow2 and close - open > high - close
twoSlowLows = low[1] < lowestSlow2 and oneSlowLow
twoSlowHighs = high[1] > highestSlow2 and oneSlowHigh
// oneFastLow = longZone and low < lowestFast2
// oneFastHigh = shortZone and high > highestFast2


// CONFIGURE SHORT/LONG ZONES
if oneSlowLow
    lowSlowCount := lowSlowCount + 1

if oneSlowHigh
    highSlowCount := highSlowCount + 1

if oneSlowLow
    firstAction := longZone or firstAction
    shortZone := true
    longZone := false
    highSlowCount := 0
    lowSlowCount := 0
    highFastCount := 0
    lowFastCount := 0

if oneSlowHigh
    firstAction := shortZone or firstAction
    longZone := true
    shortZone := false
    lowSlowCount := 0
    highSlowCount := 0
    highFastCount := 0
    lowFastCount := 0

bgColor2 = shortZone ? color.red : longZone ? color.green : na
bgcolor(color=bgColor2, transp=85)
plotshape(shortZone, title="shortzone", style=shape.cross, location=location.abovebar, size=size.tiny, color=color.red, textcolor=color.white, transp=0, display=display.none)


// HELPER VARIABLES
greenCandle = (close > open)
redCandle = (close < open)
crazyVolume = volume0 / 2 > ((volume1 + volume2 + volume3) / 3)
macdBottomed = macd > macd1 and macd1 < macd2 and macd1 < signal
macdSlowingDown = abs(macd - macd1) < abs(macd1 - macd2)
macdTopped = macd < macd1 and macd1 > macd2 and macd1 > signal
macdBelow0 = macd1 < 0
macdAbove0 = macd1 < 0
rsiBottomed = rsiClose > rsi1 and rsi1 < rsi2 and rsiClose > rsi1 + 1
rsiTopped = rsiClose < rsi1 and rsi1 > rsi2 and rsiClose < rsi1 - 1
rsiDecreasing = rsiClose < rsi2 and (rsiClose < rsi2 - 1) and rsi1 > rsi2 + 1
rsiIncreasing = rsiClose > rsi2 and rsi1 < rsi2 - 1
// emaBottomed = 
// newLow = low[1] < lowestFast1 and close > lowestFast1
// newHigh = high[1] > highestFast2 and close < highestFast1
// twoNewHighs = high[2] > highestFast3 and newHigh
// twoNewLows = low[2] < lowestFast3 and newLow
// lowestPrevMacd = lowerMacd2 and macd > lowestMacd
// highestPrevMacd = higherMacd2 and macd < highestMacd
slowCloseBelow = firstAction and close < lowestSuperSlow1
slowCloseAbove = firstAction and close > highestSuperSlow1

bgcolor(color=crazyVolume ? color.blue : na)

switchToLong = isShort and firstAction and crazyVolume and greenCandle

addLow = addOnLows and rsiBottomed and rsiIncreasing and rsi1 < addLowRsi
addHigh = addOnHighs and rsiTopped and rsi1 > addHighRsi
// reopenHigh = reopenOnHighs and high > highestSlow2
// reopenLow = reopenOnHighs and low < lowestSlow2

if addHigh
    addHighCount := addHighCount + 1

if addLow
    addLowCount := addLowCount + 1

basicLongSetup = rsiBottomed and rsiIncreasing and rsi1 < buyLongZoneRsi and (macdSlowingDown or macdBottomed)
fastOpenLongSetup = fastOpenLong and slowCloseAbove and rsiClose < fastOpenLongRsi
longNoShortSetup = not allowShorts and shortZone and rsiBottomed and rsi1 < buyShortZoneRsi and (macdSlowingDown or macdBottomed)

fastOpenShortSetup = fastOpenShort and slowCloseBelow and rsiClose > fastOpenShortRsi

longSetup = (longZone and low > lowestSlow1 and (basicLongSetup or fastOpenLongSetup)) or longNoShortSetup
shortSetup = allowShorts and shortZone and high < highestSlow1 and ((rsiTopped and rsi1 > shortShortZoneRsi and (macdSlowingDown or macdTopped)) or fastOpenShortSetup)  // 

addLongSetup = longZone and addLow and addLowCount < 2
addShortSetup = shortZone and addHigh and addHighCount < 2

closeLongSetup = isLong and rsiTopped and rsiDecreasing and rsi1 > rsiCloseLongZone and close > closeLongAfter
closeShortSetup = isShort and rsiBottomed and rsi1 < rsiCloseShortZone and close < closeShortAfter
longStopped = isLong and close < longStopPrice
shortStopped = isShort and high > shortStopPrice


// STRAT SETUP
long = not isLong and (longSetup or (longShortCloses and closeShortSetup) or (longShortStops and shortStopped))
addLong = isLong and addLongSetup
short = not isShort and shortSetup
addShort = isShort and addShortSetup
closeLong = closeLongSetup or longStopped
closeShort = closeShortSetup or shortStopped


bgcolor(color=longShortStops and shortStopped ? color.orange : na, transp=20)
// bgcolor(color=short ? color.green : na, transp=65)
// bgcolor(color=isShort ? color.red : na, transp=65)
// bgcolor(color=isLong ? color.green : na, transp=65)

if long
    isLong := true
    isShort := false
    entryPrice := open

if short
    isShort := true
    isLong := false
    entryPrice := open

if closeLong
    isLong := false
    addHighCount := 0
    addLowCount := 0
    // lastMacd := 0.0
    // lastRsi := 0.0
    // entryPrice := 0.0
    
if closeShort
    isShort := false
    addHighCount := 0
    addLowCount := 0
    // lastMacd := 0.0
    // lastRsi := 0.0
    // entryPrice := 0.0

// if addLong
//     longCount := longCount + 1
//     lastMacd := macd < lastMacd ? macd : lastMacd
//     lastRsi := rsiClose < lastRsi ? rsiClose : lastRsi

// if addShort
//     shortCount := shortCount + 1
//     lastMacd := macd > lastMacd ? macd : lastMacd
//     lastRsi := rsiClose > lastRsi ? rsiClose : lastRsi

plotshape(firstAction and longZone and long, title="buybags", style=shape.cross, location=location.abovebar, size=size.tiny, color=color.green, textcolor=color.white, transp=0)
plotshape(firstAction and shortZone and short, title="sellbags", style=shape.xcross, location=location.abovebar, size=size.tiny, color=color.red, textcolor=color.white, transp=0)

if firstAction and longZone and long
    firstAction := false

if firstAction and shortZone and short
    firstAction := false

if firstAction and shortZone and closeLong
    firstAction := false
  
if firstAction and longZone and closeShort
    firstAction := false


// STRAT ENTRIES/EXITS
strategy.entry("long", long=true, when=long and isWithinTimeBounds)
strategy.order("long", long=true, when=addLong and isWithinTimeBounds, comment="add")
strategy.order("short", long=false, when=addShort and isWithinTimeBounds, comment="add")
strategy.close("long", when=closeLong and isWithinTimeBounds)
strategy.entry("short", long=false, when=short and isWithinTimeBounds)
strategy.close("short", when=closeShort and isWithinTimeBounds)

if (strategy.position_size > 0)
    isLong := true
    isShort := false
    strategy.exit("stop close", "long", stop=longStopPrice)

if (strategy.position_size < 0)
    isShort := true
    isLong := false
    strategy.exit("stop close", "short", stop=shortStopPrice)

if (strategy.position_size == 0)
    isLong := false
    isShort := false
    addHighCount := 0
    addLowCount := 0
    // lastMacd := 0.0
    // lastRsi := 0.0
    // entryPrice := 0.0