//@version=4
strategy("MACD Please", overlay=true, calc_on_every_tick=true, initial_capital=1000, default_qty_value=100, default_qty_type=strategy.cash, currency=currency.USD)

// days to test
daysBackMax = input(defval=90, title="Max Days Back to Test", minval=0)
daysBackMin = input(defval=0, title="Min Days Back to Test", minval=0)
msBackMax = 1000 * 60 * 60 * 24 * daysBackMax
msBackMin = 1000 * 60 * 60 * 24 * daysBackMin
isWithinTimeBounds = (msBackMax == 0 or (time > (timenow - msBackMax))) and (msBackMin == 0 or (time < (timenow - msBackMin)))

// allowAdds = input(defval=true, title="Allow Adds?", type=input.bool)
// allowShorts = input(defval=true, title="Allow Shorts?", type=input.bool)
// reopenLongs = input(defval=false, title="Reopen Longs?", type=input.bool)
// rsiEntryLevel = input(defval=41, title="RSI Entry", minval=0, step=1)
// addLongRSI = input(defval=40, title="Add Long RSI", minval=0, step=1)
// maxAdds = input(defval=5, title="Max Adds", minval=0, step=1)

var isLong = false
var isShort = false
// var addLongClose = 0.0
// var rsiEntry = 0.0
// var longCount = 0
// var macdEntry = 0.0

// MACD
fast = 12, slow = 26
fastMA = sma(close, fast)
slowMA = sma(close, slow)
macd = sma(close, fast) - sma(close, slow)
signal = sma(macd, 9)
rsiClose = rsi(close, 14)


// getMACD(index) =>
//     thisFastMA = ema(close[index], fast)
//     thisSlowMA = ema(close[index], slow)
//     thisMacd = thisFastMA - thisSlowMA

// getRsi(index) =>
//     thisRsi = rsi(close[index], 14)

// macd0 = getMACD(0)
// macd1 = getMACD(1)
// macd2 = getMACD(2)
// macd3 = getMACD(3)

// rsi0 = getRsi(0)
// rsi1 = getRsi(1)
// rsi2 = getRsi(2)
// rsi3 = getRsi(3)

greenCandle = (close > open)
redCandle = (close < open)

// sma = sma(close, smaLength)

plot(vwap, linewidth=1, color=color.blue)


// long = not isLong and macd < signal and rsiClose > rsi1 and rsiClose <= rsiEntryLevel

// plotshape(long, title="Stop", text="Stop Long", style=shape.labeldown, location=location.abovebar, size=size.tiny, color=color.green, textcolor=color.white, transp=0)

// higher = highest(macd, 30)[1]
// lower = lowest(macd, 30)[1]

hiHighs = highest(close, 30)
loLows  = lowest(close, 30)

// Plot values on the chart
plot(series=hiHighs, color=color.green, linewidth=2)
plot(series=loLows, color=color.red, linewidth=2)

// bgcolor(color=aboveVwap ? color.green : na)
// bgcolor(color=higher ? color.red : na)
// bgcolor(color=lower ? color.green : na)

// if long or reopenLong
//     isLong := true
//     isShort := false
//     macdEntry := macd
//     rsiEntry := rsiClose


// strategy.entry("long", long=true, when=(long or reopenLong) and isWithinTimeBounds)
// strategy.order("long", long=true, when=addLong and allowAdds and longCount <= maxAdds and isWithinTimeBounds, comment="add")
// strategy.close("long", when=closeLong and isWithinTimeBounds)
// strategy.entry("short", long=false, when=short and allowShorts and isWithinTimeBounds)
// strategy.order("short", long=false, when=addShort and allowAdds and longCount <= maxAdds and isWithinTimeBounds, comment="add")
// strategy.close("short", when=(closeShort or (long or reopenLong)) and allowShorts and isWithinTimeBounds)

// if (strategy.position_size > 0)
//     strategy.exit(id="stop long", stop=longStopPrice)

// if (strategy.position_size < 0)
//     strategy.exit(id="stop short", stop=shortStopPrice)