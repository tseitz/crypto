//@version=4
strategy("SlimTrades 2h", overlay=true, calc_on_every_tick=false, initial_capital=1000, default_qty_value=100, default_qty_type=strategy.cash, currency=currency.USD)

var isLong = false
var isShort = false

// days to test
daysBackMax = input(defval=21, title="Max Days Back to Test", minval=0)
daysBackMin = 0
msBackMax = 1000 * 60 * 60 * 24 * daysBackMax
msBackMin = 1000 * 60 * 60 * 24 * daysBackMin
isWithinTimeBounds = (msBackMax == 0 or (time > (timenow - msBackMax))) and (msBackMin == 0 or (time < (timenow - msBackMin)))

hiLowFast = input(defval=4, title="Hi Low Short", minval=0, step=1)

// Configure trail stop level with input options (optional)
longTrailPerc = input(title="Trail Long Loss (%)", type=input.float, minval=0.0, step=0.1, defval=4) * 0.01
shortTrailPerc = input(title="Trail Short Loss (%)", type=input.float, minval=0.0, step=0.1, defval=4) * 0.01

// Determine trail stop loss prices
longStopPrice = 0.0

longStopPrice := if (strategy.position_size > 0)
    stopValue = close * (1 - longTrailPerc)
    max(stopValue, longStopPrice[1]) // max allows for trailing stop
else
    0

// Determine trailing short price
shortStopPrice = 0.0

shortStopPrice := if (strategy.position_size < 0)
    stopValue = close * (1 + shortTrailPerc)
    min(stopValue, shortStopPrice[1])
else
    999999

// helper funcs
getHighest(index, speed) =>
    thisHighest = highest(high, speed)[index]

getLowest(index, speed) =>
    thisLowest = lowest(low, speed)[index]


// plot
highestFast1 = getHighest(1, hiLowFast)
lowestFast1 = getLowest(1, hiLowFast)

plot(series=highestFast1, color=color.green, linewidth=1)
plot(series=lowestFast1, color=color.red, linewidth=1)

// MACD
fast = 12, slow = 26
fastMA = ema(close, fast)
slowMA = ema(close, slow)
macd = fastMA - slowMA
signal = ema(macd, 9)
rsiClose = rsi(close, 14)

getMACD(index) =>
    thisFastMA = ema(close[index], fast)
    thisSlowMA = ema(close[index], slow)
    thisMacd = round((thisFastMA - thisSlowMA) * 100) / 100

macd0 = getMACD(0)
macd1 = getMACD(1)
macd2 = getMACD(2)



// rsi
getRsi(index) =>
    thisRsi = round(rsi(close[index], 14) * 100) / 100
    
rsi0 = getRsi(0)
rsi1 = getRsi(1)
rsi2 = getRsi(2)
rsi3 = getRsi(3)

// var setup
macdBottomed = ((macd > macd1 and macd1 < macd2)) //  or (macd2 - macd1 > macd1 - macd)
macdTopped = ((macd < macd1 and macd1 > macd2)) //  or (macd2 - macd1 < macd1 - macd)
macdDecreasing = macd < macd2
macdIncreasing = macd > macd2

rsiBottomed = rsiClose > rsi1 and rsi1 < rsi2
rsiTopped = rsiClose < rsi1 and rsi1 > rsi2
rsiDecreasing = rsiClose < rsi2
rsiIncreasing = (rsiClose > rsi2 and rsi1 < rsi2) 

// strat
isLong := strategy.position_size > 0
isShort := strategy.position_size < 0

// long = not isLong and rsiBottomed and rsiIncreasing // (macdBottomed and macd < signal) or (macdBottomed and macdIncreasing)
// short = not isShort and rsiTopped and rsiDecreasing // (macdTopped and macd > signal) or (macdTopped and macdDecreasing)
// closeLong = macdTopped and macdDecreasing
// closeShort = macdBottomed and macdIncreasing


// strategy.entry("long", long=true, when=long and isWithinTimeBounds)
// strategy.close("long", when=short and isWithinTimeBounds)
// strategy.entry("short", long=false, when=short and isWithinTimeBounds)
// strategy.close("short", when=long and isWithinTimeBounds)

// // Submit exit orders for trail stop loss price
// if (strategy.position_size > 0)
//     strategy.exit(id="XL TRL STP", stop=longStopPrice)

// if (strategy.position_size < 0)
//     strategy.exit(id="XS TRL STP", stop=shortStopPrice)
