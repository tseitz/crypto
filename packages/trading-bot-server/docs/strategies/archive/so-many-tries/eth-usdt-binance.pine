//@version=4
strategy("ETHUSDT Binance 3m", overlay=true, calc_on_every_tick=false, initial_capital=1000, default_qty_value=100, default_qty_type=strategy.cash, currency=currency.USD)

// days to test
daysBackMax = input(defval=30, title="Max Days Back to Test", minval=0)
daysBackMin = input(defval=0, title="Min Days Back to Test", minval=0)
msBackMax = 1000 * 60 * 60 * 24 * daysBackMax
msBackMin = 1000 * 60 * 60 * 24 * daysBackMin
isWithinTimeBounds = (msBackMax == 0 or (time > (timenow - msBackMax))) and (msBackMin == 0 or (time < (timenow - msBackMin)))

Precision = input(0.4, minval=0.0001, title="Precision", step=0.1)
doji = abs(open - close) <= (high - low) * Precision
bgcolor(color=doji ? color.yellow : na, transp=95)

longStopPerc = input(defval=3, title='Long Stop Loss %', type=input.float, step=1) / 100
shortStopPerc = input(defval=4, title='Short Stop Loss %', type=input.float, step=1) / 100
longStopPrice = strategy.position_avg_price * (1 - longStopPerc)
shortStopPrice = strategy.position_avg_price * (1 + shortStopPerc)

// plot the vwap. I like a gap high and low of the close to be more conservative
vwapHighPerc = input(defval=.025, title='VWAP High %', type=input.float, step=.001)
vwapLowPerc = input(defval=.014, title='VWAP Low %', type=input.float, step=.001)
vwapClose = vwap(close)
vwapCloseHigh = vwap(close + close * .001)
vwapCloseLow = vwap(close - close * .001)
vwapLow = vwap(low - low * vwapLowPerc)
vwapHigh = vwap(high + high * vwapHighPerc)

plot(series=vwapClose, color=color.blue, linewidth=2)
plot(series=vwapLow, color=color.orange, linewidth=1)
plot(series=vwapHigh, color=color.orange, linewidth=1)

// where we at?
var isLong = false
var isShort = false
var shortFromLong = false
var longFromShort = false


greenCandle = (close > open) and not doji
redCandle = (close < open) and not doji

openLong = not isLong and greenCandle and open < vwapLow
openShort = not isShort and redCandle and open > vwapHigh
closeLong = isLong and high > vwapClose
closeShort = isShort and low < vwapClose

// longWin = isLong and high > vwapHigh
// longLoss = isLong and low < vwapClose
// shortWin = isShort and low < vwapLow
// shortLoss = isShort and high > vwapClose
// shortFromLongWin = shortFromLong and low < vwapClose
// longFromShortWin = longFromShort and high > vwapClose

if openLong
    isLong := true
    isShort := false

if openShort
    isLong := false
    isShort := true
  
if closeShort
    isShort := false

if closeLong
    isLong := false

// if shortLoss
//     isLong := false
//     isShort := false

// if longLoss
//     isLong := false
//     isShort := false

// if longWin
//     isShort := true
//     shortFromLong := true
//     strategy.entry("short", long=false, stop=shortStopPrice, when=isWithinTimeBounds)

// if shortFromLong and shortFromLongWin
//     isLong := false
//     isShort := false
//     shortFromLong := false
//     strategy.close("short", when=isWithinTimeBounds)

// if shortWin
//     isLong := true
//     longFromShort := true
//     strategy.entry("long", long=true, stop=longStopPrice, when=isWithinTimeBounds)

// if longFromShort and longFromShortWin
//     isLong := false
//     isShort := false
//     longFromShort := false
//     strategy.close("long", when=isWithinTimeBounds)


// plot the plays
// plotshape(openLong, title="long", text="long", style=shape.labelup, location=location.belowbar, size=size.tiny, color=color.green, textcolor=color.white, transp=0)

// strategy
strategy.entry("long", long=true, when=openLong and isWithinTimeBounds)
strategy.close("long", when=closeLong and isWithinTimeBounds)
strategy.entry("short", long=false, when=openShort and isWithinTimeBounds)
strategy.close("short", when=closeShort and isWithinTimeBounds)

if (strategy.position_size < 0)
    strategy.exit(id="stop", stop=shortStopPrice)

if (strategy.position_size > 0)
    strategy.exit(id="stop", stop=longStopPrice)